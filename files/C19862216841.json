{
    "id": 75210,
    "title": "Studieplan for kurset 3.7. Systemudviklingsmetoder ved Datanomkursus ",
    "documentTypeId": "810",
    "isSagsforlobPeriodValid": false,
    "shortName": "PLN nr 22168 af 01/08/1986",
    "documentHtml": "<div class=\"bjelke\">Den fulde tekst</div><DIV CLASS=PARA ID=\"INDHOLD\"> \r\n\r\n\r\n\r\n<H1 CLASS=TITLE ALIGN=CENTER>Studieplan for kurset 3.7.  \r\n\r\n Systemudviklingsmetoder ved Datanomkursus </H1>  \r\n\r\n<P></P>  \r\n\r\n<BR>  \r\n\r\n<P>Studieplanen har virkning fra august 1984 (genoptryk) </P>  \r\n\r\n<P>P.d.v. </P>  \r\n\r\n<P>e.b. </P>  \r\n\r\n<P>Erik Nexelmann </P>  \r\n\r\n<P>underv.insp. </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Formål. </P>  \r\n\r\n<P>Modulet har til formål at give de studerende kendskab til en række af de  \r\n\r\n systematiske metoder, der anvendes ved udvikling af datamatiske systemer.  \r\n\r\n</P>  \r\n\r\n<P>Der lægges i modulet særlig vægt på metoder og værktøjer til brug for  \r\n\r\n systemanalysen, dvs. frembringelse af de for systemdesign og  \r\n\r\n systemimplementering nødvendige specifikationer. </P>  \r\n\r\n<P>De studerende skal gennem kurset opnå et grundigt kendskab til og  \r\n\r\n færdighed i anvendelse af een af metoderne. </P>  \r\n\r\n<P>De studerende skal orienteres om overgangen fra analysefasen til design-  \r\n\r\n og implementationsfasen i et projektforløb. Desuden skal de studerende  \r\n\r\n orienteres om forskellige design- og implementeringsstrategier. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Forudsætninger for deltagelse. </P>  \r\n\r\n<P>2.1. Formelle forudsætninger for deltagelse. </P>  \r\n\r\n<P>Adgangsbetingelser fra Edb-assistentuddannelsen: </P>  \r\n\r\n<P>- Problemorienteret programmeringssprog. </P>  \r\n\r\n<P>- Problemorienteret programmeringssprog. </P>  \r\n\r\n<P>- Drift. </P>  \r\n\r\n<P>- Planlægning. </P>  \r\n\r\n<P>- Projektgennemførelse. </P>  \r\n\r\n<P>2.2. Anbefalede forudsætninger. </P>  \r\n\r\n<P>- 2.1 Sproglære. </P>  \r\n\r\n<P>- 2.2 Programkonstruktion. </P>  \r\n\r\n<P>Modulet kræver kendskab til procesbegrebet, herunder kendskab til  \r\n\r\n sekventielle processer og parallelle processer. Desuden er det en fordel at  \r\n\r\n være fortrolig med programnotation i en PASCAL-lignende notation. </P>  \r\n\r\n<P>Modulet indeholder forslag til design og implementering af datamatiske  \r\n\r\n systemer baseret på parallelle programmer. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Indhold. </P>  \r\n\r\n<P>Modulet er indholdmæssigt opdelt i tre hovedafsnit, der hver omfatter en  \r\n\r\n af følgende metoder til analyse af og specifikation af et datamatisk system.  \r\n\r\n</P>  \r\n\r\n<P>Struktueret Analyse: Denne metode er udviklet i USA af en kreds omkring  \r\n\r\n Yourdon. Metoden er valgt til at skulle studeres detaljeret og dybtgående i  \r\n\r\n modulet, dvs. de studerende skal opnå et grundigt kendskab til og færdighed i  \r\n\r\n at anvende metoden. </P>  \r\n\r\n<P>ISAC: Information Systems work and Analysis of Changes. Metoden er  \r\n\r\n udviklet i Sverige og medtages her som en metode, eleverne skal have kendskab  \r\n\r\n til. </P>  \r\n\r\n<P>JSD: Jackson System Development er udviklet i USA af Michael Jackson.  \r\n\r\n Metoden er den nyeste af de tre metoder og eleverne skal opnå kendskab til  \r\n\r\n metoden. </P>  \r\n\r\n<P>For alle tre metoder gælder det, at der ikke findes noget teoretisk  \r\n\r\n fundament for metoderne. Metoderne repræsenterer tre måder, hvorpå arbejdet  \r\n\r\n med specifikation af et datamatisk system, kan systematiseres. Der, anvendes  \r\n\r\n en række forskellige beskrivelsesværktøjer, ligesom der anvendes forskellige  \r\n\r\n angrebsvinkler til systemarbejdet. </P>  \r\n\r\n<P>3.1. Struktueret Analyse (SA). </P>  \r\n\r\n<P>I dette afsnit gennemgåes denne metode detaljeret og dybtgående. Der  \r\n\r\n lægges stor vægt på at opøve de studerende i brugen af metodens værktøjer og  \r\n\r\n at anvende evalueringskriterier for de beskrivelser, metoden er baseret på.  \r\n\r\n</P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Værktøjer, beskrivelsesmetoder og evaluering. </P>  \r\n\r\n<P>Metoden omfatter to grafiske beskrivelsesformer: datastrømdiagrammer og  \r\n\r\n datastrukturdiagrammer. Datastrømdiagrammet (DFD) er metodens grundlæggende  \r\n\r\n beskrivelsesværktøj. Datastrukturdiagrammet (DSD) anvendes til beskrivelse af  \r\n\r\n et systems logiske filstruktur, og kan danne basis for senere implementering  \r\n\r\n ved hjælp af et databasesystem. </P>  \r\n\r\n<P>Data beskrives i SA på logisk niveau i et datakatalog (eng. Data  \r\n\r\n Dictionary, DD) ved brug af en modificeret Bachus-Nauer notation. </P>  \r\n\r\n<P>Processer beskrives i såkaldte Mini-Spec's ved struktueret tekst, enten  \r\n\r\n struktueret engelsk eller struktueret dansk. </P>  \r\n\r\n<P>Datastrømdiagrammer beskriver et system som en række processer indbyrdes  \r\n\r\n forbundet ved datastrømme. Systemet beskrives i et sæt hierarkiske  \r\n\r\n diagrammer. Diagrammerne indeholder symboler for lagrede data (filer).  \r\n\r\n Filtilgangene anvendes til konstruktion af den logiske filstruktur. </P>  \r\n\r\n<P>Systembeskrivelsen i form af DFD'er, DSD'er DD og Mini-Spec tilstræbes at  \r\n\r\n blive redundansfri. Det er samtidig muligt at konstatere, om beskrivelserne  \r\n\r\n er konsistente. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Opstilling af fysisk model af nuværende system.  \r\n\r\n</P>  \r\n\r\n<P>På grundlag af brugernes beskrivelser opstiles en beskrivelse af det  \r\n\r\n nuværende system. Denne beskrivelse er fysisk i den forstand, at den vil  \r\n\r\n indeholde referencer til fysiske forhold - afdelinger, personer, formularer,  \r\n\r\n maskiner mv. Det sikres, at brugeren er enig i beskrivelsen og at  \r\n\r\n beskrivelsen er konsistent. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Logisk model for nuværende system. </P>  \r\n\r\n<P>Ved expandering af det fysiske DFD gøres beskrivelsen mere logisk. Der  \r\n\r\n konstrueres en logisk datastruktur og udformes et logisk DSD. Desuden  \r\n\r\n reduceres alle datastrømme til logiske datastrømme. </P>  \r\n\r\n<P>Systemet skal foreligge beskrevet på logisk niveau. Alle referencer til  \r\n\r\n fysiske forhold er fjernet og beskrivelsen refererer kun til de for systemet  \r\n\r\n nødvendige data. </P>  \r\n\r\n<P CLASS=PUNKT> <B>4.</B> Logisk model af nyt system. </P>  \r\n\r\n<P>For første gang tages brugernes krav og ønsker til systemet i betragtning.  \r\n\r\n Ud fra kravspecifikationen udformes forslag til et nyt system. I den logiske  \r\n\r\n model for det nuværende system afgrænses det område, som vil blive berørt af  \r\n\r\n ændringer. </P>  \r\n\r\n<P>Det nye system udformes og beskrives ved brug af de allerede kendte  \r\n\r\n værktøjer: DFD, DSD, DD og mini-spec. Det nye system er fortsat beskrevet på  \r\n\r\n logisk niveau. dvs. der er ikke taget hensyn til brugerens faktiske fysiske  \r\n\r\n virkelighed. </P>  \r\n\r\n<P CLASS=PUNKT> <B>5.</B> Fysisk model for nyt system. </P>  \r\n\r\n<P>Der skal nu udarbejdes en eller flere optioner til et nyt system.  \r\n\r\n Optionerne skal anvendes til vurdering af systemets automatiseringsgrad. </P>  \r\n\r\n<P>Optionerne beskriver grænsefladen mellem automatiske og manuelle processer  \r\n\r\n i systemet, og samtidig vil de fysiske omgivelser til systemet være beskrevet  \r\n\r\n i den fornødne udstrækning. </P>  \r\n\r\n<P>De udarbejdede optioner kvantificeres med henblik på at give mulighed for  \r\n\r\n at foretage valg af automatiseringsgrad. </P>  \r\n\r\n<P CLASS=PUNKT> <B>6.</B> Pakning af den struktuerede specifikation. </P>  \r\n\r\n<P>Systembeskrivelsen skal nu pakkes, dvs. den skal klargøres til  \r\n\r\n systemdesign. Der fastlægges udførelsesfrekvenser for de enkelte processer.  \r\n\r\n Systemet opdeles i delsystemer ud fra udførelsesfrekvenser og eventuelt  \r\n\r\n datamængder samt ud fra svartidskrav. Desuden specificeres væsentlige  \r\n\r\n dataformater - kun de externe - og modellen tilføjes eventuelle  \r\n\r\n kontrolstrømme. </P>  \r\n\r\n<P CLASS=PUNKT> <B>7.</B> Design og implementering. </P>  \r\n\r\n<P>Design og implementering bliver kun behandlet på et orienterende niveau.  \r\n\r\n De studerende bliver orienteret om hovedprincipperne i struktueret design,  \r\n\r\n samt bliver orienteret om et par vigtige implementeringsstrategier top down  \r\n\r\n implementering og paraplyimplementering. </P>  \r\n\r\n<P>Muligheden af at implementere systemet helt eller delvist ved  \r\n\r\n parallelprogrammering vurderes. Der gives en kort orientering om de værktøjer  \r\n\r\n til parallelprogrammering, der kan tænkes anvendt. </P>  \r\n\r\n<P CLASS=PUNKT> <B>8.</B> Vedligeholdelse af den struktuerede specifikation.  \r\n\r\n</P>  \r\n\r\n<P>Her vurderes hvorledes ændringer til et system kan indarbejdes og hvilken  \r\n\r\n indflydelse løbende ændringerne vil få for projektarbejdet. Desuden behandles  \r\n\r\n mulighederne for at automatisere specifikationsarbejdet, f.eks. ved brug af  \r\n\r\n software til håndtering af Data Dictionary. </P>  \r\n\r\n<P>3.2. ISAC. </P>  \r\n\r\n<P>I dette afsnit gives en indføring i denne metode. Den studerende opøves i  \r\n\r\n brugen af ISAC's værktøjer og skal gennemføre mindre opgaver i ISAC  \r\n\r\n specifikation. </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Værktøjer, beskrivelsesmetoder og evaluering. </P>  \r\n\r\n<P>I modsætning til SA anvender man i ISAC flere typer af grafiske  \r\n\r\n beskrivelser, kaldet grafer. Følgende grafer vil blive behandlet: V- graf,  \r\n\r\n I-graf, K-graf og D-graf. </P>  \r\n\r\n<P>V-grafer beskriver aktiviteterne i systemet og de mængder af information  \r\n\r\n og materiel, som aktiviteterne forudsætter. V-grafer beskriver såvel  \r\n\r\n informationsstrømme som strømme af materialer. </P>  \r\n\r\n<P>I-grafer anvendes til beskrivelse af sammenhængen mellem de  \r\n\r\n informationsmængder, der behandles af systemet. K-grafer beskriver  \r\n\r\n informationsmængdernes opbygning og D-grafer beskriver det  \r\n\r\n informationsbehandlende system i form af manuelle rutiner og programmer. </P>  \r\n\r\n<P>Ud over graferne anvendes i ISAC en lang række tabeller og lister til  \r\n\r\n beskrivelse af forskellige forhold. I modulet fokuseres på anvendelsen af de  \r\n\r\n tabeller, der direkte understøtter systemarbejdets mere tekniske aspekter.  \r\n\r\n</P>  \r\n\r\n<P>I ISAC anbefales et noget bogholderipræget system til nummerering af  \r\n\r\n grafer, aktiviteter, mængder mv. De studerende anbefales at bruge dette, idet  \r\n\r\n en systematisk numerering er en forudsætning for at kunne holde styr på ISAC'  \r\n\r\n s omfattende beskrivelser. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Forandringsanalysen. </P>  \r\n\r\n<P>Forandringsanalysens metodetrin: </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Analyse af problemer og nuværende system. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Analyse af forandringsalternativer. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Valg af forslag til systemløsning. </P>  \r\n\r\n<P>Der udarbejdes en overordnet beskrivelse af det nuværende system ved  \r\n\r\n V-grafer. I denne fase af et projekt undersøges forandringsbehov og - ønsker  \r\n\r\n og man søger at finde frem til årsagerne til problemer. </P>  \r\n\r\n<P>Der udarbejdes forslag til ændringer til det eksisterende system.  \r\n\r\n Forslagene evalueres og der udvælges en systemløsning. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Virksomhedsstudier. </P>  \r\n\r\n<P>Metodetrinene i virksomhedstudier: </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Inddeling i delinformationssystemer. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Analyse af delinformationssystemer. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Samordning af delinformationssystemer. </P>  \r\n\r\n<P>Der gennemføres en detaljeret analyse af systemet med de foreslåede  \r\n\r\n ændringer. Dette resulterer i detaljerede V-grafer og egenskabstabeller, som  \r\n\r\n beskriver fysiske forhold i systemet såsom datamængder og frekvenser. </P>  \r\n\r\n<P>Desuden søges systemet opdelt i informationsbehandlende delsystemer og  \r\n\r\n rent manuelle delsystemer. Der udarbejdes en informationssystemfortegnelse.  \r\n\r\n</P>  \r\n\r\n<P CLASS=PUNKT> <B>4.</B> Informationsanalyse. </P>  \r\n\r\n<P>Informationsanalysen består af følgende metodetrin: </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Præcedensanalyse og komponentanalyse. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Procesanalyse. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Egenskabsanalyse. </P>  \r\n\r\n<P>I præcedensanalysen identificeres de transformationer. der finder sted på  \r\n\r\n informationsmængderne, samt de forudsætninger der skal gælde for  \r\n\r\n produktionene af de enkelte informationsmængder. Beskrivelsen vil foreligge i  \r\n\r\n en I-graf. </P>  \r\n\r\n<P>I komponentanalysen beskrives informationsmængdernes struktur i K- grafer.  \r\n\r\n</P>  \r\n\r\n<P>Procesanalysen består i at udarbejde en tabel over de processer, der  \r\n\r\n indgår i systemet. I procestabellen foretages der en klassificering af  \r\n\r\n systemets processer. Der udarbejdes desuden en procesbeskrivelse for alle  \r\n\r\n processer. </P>  \r\n\r\n<P>Egenskabsanalysen består i at kvantificere de i procesfortegnelsen  \r\n\r\n indgående processer mht. frekvenser og i kvantificering af datamængder mv.  \r\n\r\n</P>  \r\n\r\n<P CLASS=PUNKT> <B>4.</B> Datasystemudformning og udstyrstilpasning. </P>  \r\n\r\n<P>Metodetrin i datasystemudformning: </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Fastlægge præliminære procesgrupper. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Gruppering af processer. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Registeranalyse. </P>  \r\n\r\n<P CLASS=PUNKT> <B>4.</B> Datastruktuering og programafgrænsning. </P>  \r\n\r\n<P CLASS=PUNKT> <B>5.</B> Programkonstruktion. </P>  \r\n\r\n<P>Datasystemudformning er den første egentlige fase i design af systemet.  \r\n\r\n Programafgrænsningen sker på grundlag af en gruppering af processerne ud fra  \r\n\r\n kriterier som: </P>  \r\n\r\n<P>centraliseringsgrad, bearbejdsningsmetoder, udførelsesfrekvenser og  \r\n\r\n udførelsestidspunkter. Systemet beskrives ved D-grafer og D- strukturer. </P>  \r\n\r\n<P>I ISAC anvendes JSP som programkonstruktionsmetode, hvorfor der orienteres  \r\n\r\n om denne metode. </P>  \r\n\r\n<P>De studerende orienteres om metodetrinnene i den sidste fase:  \r\n\r\n udstyrstilpasning. </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Udstyrsanalyse. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Tilpasning af de datamatiske rutiner. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Etablering af driftsrutiner. </P>  \r\n\r\n<P>3.3. Jackson System Development (JSD). </P>  \r\n\r\n<P>Metoden studeres ligesom ISAC på et orienterende niveau. De studerende  \r\n\r\n skal gennemføre enkelte øvelser i brugen af værktøjerne i JSD. </P>  \r\n\r\n<P>JSD opdeler systemarbejdet i to hovedfaser: specifikation og  \r\n\r\n implementering. Specifikationsfasen er igen delt i en række trin: </P>  \r\n\r\n<P>Trin 1: Opstil liste over entiteter og aktioner. </P>  \r\n\r\n<P>Trin 2: Struktuering af entiteter. </P>  \r\n\r\n<P>Trin 3: Opstilling af initialmodel. </P>  \r\n\r\n<P>Trin 4: Fastlæg og beskriv funktioner. </P>  \r\n\r\n<P>Trin 5: Fastlæg og beskriv tidskrav. </P>  \r\n\r\n<P>Som det fremgår af ovenstående beskrives systemets funktioner først på et  \r\n\r\n relativt sent tidspunkt i projektforløbet. </P>  \r\n\r\n<P>Grundideen i JSD er at systemfunktionerne skal bygges på en systemmodel,  \r\n\r\n der simulerer brugerens virkelighed. Denne &#187;virkelighed&#171; tænkes at  \r\n\r\n bestå af en række entiteter, der kan simuleres ved sekventielle processer.  \r\n\r\n Systemmodellen bliver således i JSD et system af samarbejdende processer.  \r\n\r\n</P>  \r\n\r\n<P>Der lægges i JSD vægt på muligheden af at automatiserer væsentlige dele af  \r\n\r\n implementeringen af systemet. Det er vigtigt at bemærke, at der ikke i JSD er  \r\n\r\n nogen egentlig designfase. Denne er indarbejdet i implementeringsfasen. </P>  \r\n\r\n<P CLASS=PUNKT> <B>1.</B> Værktøjer, beskrivelsesmetoder og evaluering. </P>  \r\n\r\n<P>I JSD anvendes strukturdiagrammer til beskrivelse af de mulige sekvenser  \r\n\r\n af aktioner, som entiteter kan gennemløbe. Strukturdiagrammerne omsættes til  \r\n\r\n en struktueret tekst, der beskriver entiteten som en i princippet udførbar  \r\n\r\n sekventiel proces. </P>  \r\n\r\n<P>Initialmodellen og modellens funktioner beskrives i System Specifikations  \r\n\r\n Diagrammer (SSD). I dette diagram beskrives forbindelser mellem processerne  \r\n\r\n ved datastrømforbindelser og tilstandsvektorforbindelser. </P>  \r\n\r\n<P>I forbindelse med implementering udarbejdes System Implementations  \r\n\r\n Diagrammer (SID), som beskriver de processer, der skal inverteres samt  \r\n\r\n indførte scheduleringsprocesser. </P>  \r\n\r\n<P>Til beskrivelse af datastrømme anvendes strukturdiagrammer. </P>  \r\n\r\n<P CLASS=PUNKT> <B>2.</B> Specifikationsfasen. </P>  \r\n\r\n<P>I trin 1 fastlægges den del af brugerens virkelighed, som systemet skal  \r\n\r\n omfatte. Dette sker ved at udarbeide en liste over entiteter (objekter,  \r\n\r\n enheder) og aktioner som entiteterne kan udføre eller bliver udsat for. </P>  \r\n\r\n<P>Trin 2 omfatter struktuering af entiteterne, dvs. udarbejdelse af  \r\n\r\n strukturdiagrammer, der beskriver de tilladte sekvenser ak aktioner for hver  \r\n\r\n entitet. For hver entitet udarbejdes en tekstlig beskrivelse af denne.  \r\n\r\n Jackson anvender her en speciel programnotation. </P>  \r\n\r\n<P>Der skal nu opstilles en initialmodel. Dette sker i trin 3, hvor  \r\n\r\n entiteterne opfattes som sekventielle processer, kaldet realprocesser. Til  \r\n\r\n hver realproces etabelres en modelproces af samme struktur, og realprocesser  \r\n\r\n og modelprocesser kobles sammen ved en datastrømforbindelse eller en  \r\n\r\n tilstandsvektorforbindelse. </P>  \r\n\r\n<P>Det herved fremkomne SSD er en simulering af brugerens entiteter. I trin 4  \r\n\r\n tilføjes denne model systemfunktioner. Dette sker enten ved indlejring eller  \r\n\r\n som påtrykte funktioner. </P>  \r\n\r\n<P>I trin 5 analyseres tidskrav og eventuelle krav vedrørende datamængder og  \r\n\r\n frekvenser. Der foretages de fornødne ændringer til SSD og der kan indføres  \r\n\r\n synkroniseringsprocesser. </P>  \r\n\r\n<P CLASS=PUNKT> <B>3.</B> Implementeringsfasen. </P>  \r\n\r\n<P>Til slut behandles implementeringen. Ligesom i SA, kan systemet helt eller  \r\n\r\n delvist implementeres ved brug af multiprogrammering eller  \r\n\r\n parallelprogrammering. Ved sekventiel programmering skal der foretages  \r\n\r\n programinvertering og indføres scheduleringsrutiner. Dette beskrives i SID  \r\n\r\n diagrammer. </P>  \r\n\r\n</DIV><div class=\"bjelke\">Officielle noter</div><DIV CLASS=PARA ID=\"NOTER\"> \r\n\r\n\r\n<P>Ingen </P>  \r\n\r\n</DIV>",
    "isHistorical": true,
    "editorialNotes": [],
    "alternativeMedia": [],
    "ressort": "Uddannelses- og Forskningsministeriet",
    "isReprint": false,
    "geografiskDaekningId": 0,
    "retsinfoKlassifikationId": 10,
    "caseHistoryReferenceGroup": [],
    "metadata": [
        {
            "displayName": "Offentliggørelsesdato",
            "displayValue": "01/10/1997"
        },
        {
            "displayName": "Accession",
            "displayValue": "C19862216841"
        },
        {
            "displayName": "Entydig dokumentidentifikation",
            "displayValue": "CM034415"
        },
        {
            "displayName": "Dato for førstegangsindlæggelse",
            "displayValue": "01/10/1997"
        },
        {
            "displayName": "Dato for indlæggelse",
            "displayValue": "08/09/2000"
        },
        {
            "displayName": "Dokumenttype",
            "displayValue": "Undervisningsplan"
        },
        {
            "displayName": "Dokumentets rangering",
            "displayValue": "C "
        },
        {
            "displayName": "Forskriftens nummer",
            "displayValue": "22168"
        },
        {
            "displayName": "År for udstedelse",
            "displayValue": "1986"
        },
        {
            "displayName": "Dato for underskrift",
            "displayValue": "01/08/1986"
        },
        {
            "displayName": "Offentliggjort i (publiceringsmedie)",
            "displayValue": "Retsinformation"
        },
        {
            "displayName": "Administrerende myndighed",
            "displayValue": "Erhvervsskoleafdelingen"
        },
        {
            "displayName": "Ressortministeriets journalnummer",
            "displayValue": "1986-510.612-4"
        }
    ],
    "pdfLink": {
        "isPdfAvailable": false
    },
    "documentFobTagGroup": [],
    "hasFobTags": false
}